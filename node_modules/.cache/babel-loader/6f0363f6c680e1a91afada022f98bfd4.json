{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport function useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");","map":{"version":3,"names":["useEffect","useState","useWindowSize","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"sources":["D:/web-page/Code Editor/client/src/Hook/windowSize.js"],"sourcesContent":["import {useEffect,useState} from 'react'\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}"],"mappings":";;AAAA,SAAQA,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AAEA,OAAO,SAASC,aAAT,GAAyB;EAAA;;EAC9B;EACA;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC;IAC3CI,KAAK,EAAEC,SADoC;IAE3CC,MAAM,EAAED;EAFmC,CAAD,CAA5C;EAKAN,SAAS,CAAC,MAAM;IACd;IACA,SAASQ,YAAT,GAAwB;MACtB;MACAJ,aAAa,CAAC;QACZC,KAAK,EAAEI,MAAM,CAACC,UADF;QAEZH,MAAM,EAAEE,MAAM,CAACE;MAFH,CAAD,CAAb;IAID,CARa,CAUd;;;IACAF,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXc,CAad;;IACAA,YAAY,GAdE,CAgBd;;IACA,OAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;EACD,CAlBQ,EAkBN,EAlBM,CAAT,CAR8B,CA0BtB;;EAER,OAAOL,UAAP;AACD;;GA7BeD,a"},"metadata":{},"sourceType":"module"}