{"ast":null,"code":"import axios from \"axios\";\nexport const checkStatus = async token => {\n  const options = {\n    method: \"GET\",\n    url: 'https://judge0-ce.p.rapidapi.com/submissions/' + token,\n    params: {\n      base64_encoded: \"true\",\n      fields: \"*\"\n    },\n    headers: {\n      \"X-RapidAPI-Host\": process.env.REACT_APP_RAPID_API_HOST,\n      \"X-RapidAPI-Key\": process.env.REACT_APP_RAPID_API_KEY\n    }\n  };\n  try {\n    var _response$data$status;\n    let response = await axios.request(options);\n    let statusId = (_response$data$status = response.data.status) === null || _response$data$status === void 0 ? void 0 : _response$data$status.id;\n    if (statusId === 1 || statusId === 2) {\n      //  processing --> so run again the same token after 2s\n      setTimeout(() => {\n        checkStatus(token);\n      }, 2000);\n    } else {\n      const {\n        data\n      } = response;\n      return {\n        success: true,\n        data\n      };\n    }\n  } catch (err) {\n    return {\n      success: false,\n      err\n    };\n  }\n};\nexport const submitCode = async formData => {\n  const options = {\n    method: \"POST\",\n    url: 'https://judge0-ce.p.rapidapi.com/submissions',\n    params: {\n      base64_encoded: \"true\",\n      fields: \"*\"\n    },\n    headers: {\n      \"content-type\": \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-RapidAPI-Host\": process.env.REACT_APP_RAPID_API_HOST,\n      \"X-RapidAPI-Key\": process.env.REACT_APP_RAPID_API_KEY\n    },\n    data: formData\n  };\n  try {\n    const {\n      data\n    } = await axios.request(options);\n    return {\n      success: true,\n      data\n    };\n  } catch (err) {\n    return {\n      success: false,\n      err\n    };\n  }\n};","map":{"version":3,"names":["axios","checkStatus","token","options","method","url","params","base64_encoded","fields","headers","process","env","REACT_APP_RAPID_API_HOST","REACT_APP_RAPID_API_KEY","_response$data$status","response","request","statusId","data","status","id","setTimeout","success","err","submitCode","formData"],"sources":["C:/Users/mayan/Downloads/Leetcode-Ide-main/Leetcode-Ide-main/client/src/api/index.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const checkStatus = async (token) => {\n  const options = {\n    method: \"GET\",\n    url: 'https://judge0-ce.p.rapidapi.com/submissions/' + token,\n    params: { base64_encoded: \"true\", fields: \"*\" },\n    headers: {\n      \"X-RapidAPI-Host\": process.env.REACT_APP_RAPID_API_HOST,\n      \"X-RapidAPI-Key\": process.env.REACT_APP_RAPID_API_KEY,\n    },\n  };\n  try {\n    let response = await axios.request(options);\n    let statusId = response.data.status?.id;\n\n    if (statusId === 1 || statusId === 2) {\n      //  processing --> so run again the same token after 2s\n      setTimeout(() => {\n        checkStatus(token)\n      }, 2000);\n    } else {\n      const { data } = response;\n\n      return { success: true, data};\n    }\n  } catch (err) {\n    return {success: false, err};\n  }\n};\n\nexport const submitCode = async (formData) => {\n  const options = {\n    method: \"POST\",\n    url: 'https://judge0-ce.p.rapidapi.com/submissions',\n    params: { base64_encoded: \"true\", fields: \"*\" },\n    headers: {\n      \"content-type\": \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-RapidAPI-Host\": process.env.REACT_APP_RAPID_API_HOST,\n      \"X-RapidAPI-Key\": process.env.REACT_APP_RAPID_API_KEY,\n    },\n    data: formData,\n  };\n\n  try {\n    const { data } = await axios.request(options);\n\n    return { success: true, data};\n  }catch(err) {\n    return { success: false, err}\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;EAC1C,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,+CAA+C,GAAGH,KAAK;IAC5DI,MAAM,EAAE;MAAEC,cAAc,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC;IAC/CC,OAAO,EAAE;MACP,iBAAiB,EAAEC,OAAO,CAACC,GAAG,CAACC,wBAAwB;MACvD,gBAAgB,EAAEF,OAAO,CAACC,GAAG,CAACE;IAChC;EACF,CAAC;EACD,IAAI;IAAA,IAAAC,qBAAA;IACF,IAAIC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,OAAO,CAACb,OAAO,CAAC;IAC3C,IAAIc,QAAQ,IAAAH,qBAAA,GAAGC,QAAQ,CAACG,IAAI,CAACC,MAAM,cAAAL,qBAAA,uBAApBA,qBAAA,CAAsBM,EAAE;IAEvC,IAAIH,QAAQ,KAAK,CAAC,IAAIA,QAAQ,KAAK,CAAC,EAAE;MACpC;MACAI,UAAU,CAAC,MAAM;QACfpB,WAAW,CAACC,KAAK,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACL,MAAM;QAAEgB;MAAK,CAAC,GAAGH,QAAQ;MAEzB,OAAO;QAAEO,OAAO,EAAE,IAAI;QAAEJ;MAAI,CAAC;IAC/B;EACF,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,OAAO;MAACD,OAAO,EAAE,KAAK;MAAEC;IAAG,CAAC;EAC9B;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMtB,OAAO,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,GAAG,EAAE,8CAA8C;IACnDC,MAAM,EAAE;MAAEC,cAAc,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC;IAC/CC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,cAAc,EAAE,kBAAkB;MAClC,iBAAiB,EAAEC,OAAO,CAACC,GAAG,CAACC,wBAAwB;MACvD,gBAAgB,EAAEF,OAAO,CAACC,GAAG,CAACE;IAChC,CAAC;IACDK,IAAI,EAAEO;EACR,CAAC;EAED,IAAI;IACF,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMlB,KAAK,CAACgB,OAAO,CAACb,OAAO,CAAC;IAE7C,OAAO;MAAEmB,OAAO,EAAE,IAAI;MAAEJ;IAAI,CAAC;EAC/B,CAAC,QAAMK,GAAG,EAAE;IACV,OAAO;MAAED,OAAO,EAAE,KAAK;MAAEC;IAAG,CAAC;EAC/B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}